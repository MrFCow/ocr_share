{"version":3,"sources":["components/DragDrawBox.js","components/Camera.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","createUseStyles","root","width","height","display","justifyContent","alignItems","touchAction","box","backgroundColor","worker","createWorker","logger","m","console","log","doOCR","img","pos","a","load","loadLanguage","initialize","recognize","rectangle","top","Math","min","startY","endY","left","startX","endX","abs","text","data","DragDrawBox","props","classes","useState","setPos","bind","useDrag","down","movement","movX","movY","offset","initial","initX","initY","delay","className","style","position","onClick","flexDirection","button","marginTop","videoConstraints","facingMode","WebCamWithChildren","setImg","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","background","React","cloneElement","children","audio","ref","screenshotFormat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a1527c0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { useDrag } from 'react-use-gesture';\r\nimport {createUseStyles} from 'react-jss';\r\nimport { createWorker } from 'tesseract.js';\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n\t\twidth:320,\r\n\t\theight:320,\r\n\t\tdisplay:\"flex\",\r\n\t\tjustifyContent:\"center\",\r\n\t\talignItems:\"center\",\r\n\t\ttouchAction: \"none\",\r\n\t},\r\n\tbox: {\r\n\t\tbackgroundColor: \"rgba(0,155,0,0.5)\",\r\n\t}\r\n})\r\n\r\n\r\nconst worker = createWorker({\r\n\tlogger: m => console.log(m),\r\n});\r\n\r\nconst doOCR = async (img, pos) => {\r\n\tawait worker.load();\r\n\tawait worker.loadLanguage('eng');\r\n\tawait worker.initialize('eng');\r\n\tconst { data: { text } } = await worker.recognize(img, {\r\n\t\trectangle: { \r\n\t\t\ttop: Math.min(pos.startY, pos.endY), \r\n\t\t\tleft: Math.min(pos.startX, pos.endX), \r\n\t\t\twidth: Math.abs(pos.endX-pos.startX), \r\n\t\t\theight: Math.abs(pos.endY-pos.startY) \r\n\t\t}\r\n\t});\r\n\tconsole.log(`OCR text: ${text}`)\r\n\treturn text;\r\n};\r\n\r\nexport default function DragDrawBox(props){\r\n\tconst classes = useStyles();\r\n\tconsole.log(props)\r\n\r\n\tconst [pos, setPos] = useState({\r\n\t\tstartX:0,\r\n\t\tstartY:0,\r\n\t\tendX:0,\r\n\t\tendY:0,\r\n\t});\r\n\r\n  const bind = useDrag(({ down, movement: [movX, movY], offset: [offX, offY], initial: [initX, initY] }) => {\r\n\t\t// console.log(\"init\", initX,initY);\r\n\t\t// console.log(\"mov\", movX,movY);\r\n\t\t// console.log(\"off\", offX,offY);\r\n\t\tsetPos({...pos, startX:initX, startY:initY, endX: initX+movX, endY: initY+movY});\r\n\t},\r\n\t// options\r\n\t{ \r\n\t\tdelay: true, // allowing click for generated div\r\n\t\t// bounds: { left: 0, right: 320, top: 0, bottom: 320 },\r\n\t}, \r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* <div>{JSON.stringify(pos)}</div> */}\r\n\t\t\t<div className={classes.root} {...bind()}>\r\n\t\t\t\t{(pos.startX-pos.endX)*(pos.startY-pos.endY) > 0 ? (<div \r\n\t\t\t\t\tclassName={classes.box} \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"fixed\",\r\n\t\t\t\t\t\twidth: Math.abs(pos.startX - pos.endX), \r\n\t\t\t\t\t\theight: Math.abs(pos.startY - pos.endY),\r\n\t\t\t\t\t\tleft: Math.min(pos.startX, pos.endX),\r\n\t\t\t\t\t\ttop: Math.min(pos.startY, pos.endY),\r\n\t\t\t\t\t\t// transform: `translate3d(${pos.startX}px, ${pos.startY}px, 0)` // not needed\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t// onClick={()=>console.log(\"clicked\")}\r\n\t\t\t\t\tonClick={() => {props.img ? doOCR(props.img, pos) : console.log(\"image not available\")} }\r\n\t\t\t\t/>) : null}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}","import React, {useState, useRef, useCallback} from 'react';\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport {createUseStyles} from 'react-jss'\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n\t\tdisplay:\"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent:\"center\",\r\n\t\talignItems:\"center\"\r\n\t},\r\n\tbutton: {\r\n\t\tmarginTop:5,\r\n\t}\r\n})\r\n\r\nconst videoConstraints = {\r\n  width: 320,\r\n  height: 320,\r\n  facingMode: \"environment\" // or \"user\" = front\r\n};\r\n\r\nexport default function WebCamWithChildren(props){\r\n\tconst classes = useStyles();\r\n\r\n\tconst [img, setImg] = useState(null);\r\n\tconst webcamRef = useRef(null);\r\n\t\r\n  const capture = useCallback(\r\n    () => {\r\n\t\t\tconst imageSrc = webcamRef.current.getScreenshot();\r\n\t\t\t// console.log(imageSrc)\r\n\t\t\tsetImg(imageSrc);\r\n    },\r\n    [webcamRef]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\t\t\t{!img? (\r\n\t\t\t\t<Webcam\r\n\t\t\t\t\taudio={false}\r\n\t\t\t\t\theight={320}\r\n\t\t\t\t\tref={webcamRef}\r\n\t\t\t\t\tscreenshotFormat=\"image/jpeg\"\r\n\t\t\t\t\twidth={320}\r\n\t\t\t\t\tvideoConstraints={videoConstraints}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t// <img src={img}/>\r\n\t\t\t\t<div style={{width:320, height:320, background:`url(${img})`}}>\r\n\t\t\t\t\t{React.cloneElement(props.children, { img: img })}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<span>\r\n      \t<button className={classes.button} onClick={capture}>Capture photo</button>\r\n\t\t\t\t<button className={classes.button} onClick={()=>setImg(null)}>Clear</button>\r\n\t\t\t</span>\r\n    </div>\r\n  );\r\n};","import React from 'react';\nimport DragDrawBox from './components/DragDrawBox';\nimport WebCam from './components/Camera';\n\nfunction App() {\n  return (\n    <WebCam>\n      <DragDrawBox/>\n    </WebCam>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}